/* eslint-disable */
export default async () => {
    const t = {
        ["./users/models/user.model"]: await import("./users/models/user.model")
    };
    return { "@nestjs/swagger/plugin": { "models": [], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "getHelloName": { type: String } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./common/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./authn/dto/signup.input"), { "SignupInput": { email: {}, password: {}, firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./authn/models/jwt-sign.model"), { "JwtSignModel": { JWT_ACCESS_SECRET: {}, JWT_REFRESH_SECRET: {} } }], [import("./common/models/base.model"), { "BaseModel": { createdAt: {}, updatedAt: {}, deletedAt: { nullable: true } } }], [import("./authz/models/permission.model"), { "Permission": { id: {}, action: {}, subject: {}, condition: {}, description: {} } }], [import("./authz/models/role.model"), { "Role": { id: {}, name: {}, description: {}, permissions: {} } }], [import("./users/models/user.model"), { "User": { id: { nullable: true }, email: {}, firstname: { nullable: true }, lastname: { nullable: true }, roles: { nullable: true } } }], [import("./authn/models/auth.model"), { "Auth": { user: { type: () => t["./users/models/user.model"].User } } }], [import("./authn/dto/login.input"), { "LoginInput": { email: {}, password: {} } }], [import("./authn/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./users/dto/change-password.input"), { "ChangePasswordInput": { oldPassword: {}, newPassword: {} } }], [import("./users/dto/update-user.input"), { "UpdateUserInput": { firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./authz/dto/userRole.input"), { "AddRoleToUserInput": { userId: {}, roleId: {} }, "RemoveRoleFromUserInput": { userId: {}, roleId: {} } }], [import("./authz/models/authz.model"), { "Authz": { success: {}, errorMessage: {} } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./authz/dto/roles.input"), { "AddRoleInput": { name: {}, description: {} }, "UpdateRoleInput": { id: {}, name: {}, description: {} }, "DeleteRoleInput": { id: {} }, "AddPermissionInput": { name: {}, description: {} }, "UpdatePermissionInput": { id: {}, name: {}, description: {} }, "DeletePermissionInput": { id: {} }, "AddUserInput": { email: {}, password: {}, firstname: { nullable: true }, lastname: { nullable: true } } }]] } };
};